
- unless params.has_key?(:josh)
  review japanese...hiragana/katakana/kanji...
- else
  %h3 To Do

  :markdown

    #### v3

    * Edict.kanjis = Edict.literal.scan(/./).map{|k| Kanji.find_by(literal: k).present? }.compact
    * Search has clickable results that take you to Create Fuda page
    * Upgrade to Bootstrap3
      * Gemfile: gem 'bootstrap3-rails'
      * assets/*/application.js: //= require bootstrap
      * assets/*/application.css: *= require bootstrap
    * Consider applying some Flat UI styles:
      :!open 'http://designmodo.com/tutorials'
      :!open 'http://designmodo.com/freebies'
    * Manage my personal lists better, like this list
    * Join flashcards/studying sites:
      * Inventory each reference's features
    * Start Jap Study/Flashcard App
      * Prioritize kanji, compounds, and vocab to study
        * (KCB = Kanji Compounds vocaB )
        * Use a list of particles to parse japanese subtitles and:
          * Create uniq chart of KCB found in source material
          * Create a frequency chart
    * Write Blog:
      * How to use 'rails new' without running gem install rails globally.  (mkdir,mkrvmfiles,cd-out/in,gem-install-rails)


    #### Write tests...i just wrote all that okuri/furigana code, i don't know if any pages broke

    ### Stories
    * add devise gem
    * create devise model: User
    * users can comment on:
      * kanji **(do this first!)**
      * decks
      * fuda/cards
      * profiles **(not created yet)**
    * secure devise params in logs via config/
    * create User page (aka profile page)
      * **Phase n**
        * upload photo **(gravatar?)**
        * fields for personal info
        * show their activity feed **(not created yet)**
    * add polymorphic like table
    * user has many likes
      * user has many kanji_likes?
    * users can like:
      * kanji
      * decks
      * fuda/cards
    * create (activity) feed table
      * user has many feeds
      * feed belongs to user
    * create audit table...need this, fasho
    * add friend stuff so users can make friends

    -------------------

    # OLDER STUFF

    ### Highest Priority
    * Kanji for words _or parts of words_ that i know

    ### Higher Priority

    * Decks
        * Kanji
            * with okurigana (with part of speech)
              * Kanji.where.not(grade: [8,9,10,nil], frequency: nil).where("kun LIKE '%.%'")
            * with specific particles
            * look similar (place them on same card comma separated, and the defintions comma separated)
    * Add IDs to the cards...for IDing them later
    * Add Comments to create notes on the fly...(on homepage)
        * polymorphic table

    #### Add Decks

    * Particles
    * Verb Conjugation
    * (More grammar...)

    * Vocabulary
    * Compound Kanji
      * [Use Anki to Master Japanese: Part 1 - Kanji](http://japaneselevelup.com/how-to-use-anki-to-master-japanese-part-1-kanji/)
      Use japanese 'keywords' (compounds) to learn the readings, not kun/on.
    * Sentences

    #### Features

    * Introduce Subjects (eg. Japanese is the only subject right now)
    * Group Fuda together.  (Add "Similar Fuda" link to each card.)
        * Similar Appearance
        * Similar Meaning
    * Social learning
        * Comment on cards/decks
        * Like cards/decks
        * Tagging (makes decks)
            * Have official decks, and then spin-off tags/decks.
        * Let others make cards/decks
    * Display cards in a grid (similar fuda), click on one to flip only that card
    * Randomize which side of card is displayed (Kanji vs. Readings/Meaning)

